[
    {
        "id": "2567a318.c428a4",
        "type": "tab",
        "label": "TS590, gqrx",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8a2421553543bf8c",
        "type": "tab",
        "label": "Expert Colibri ",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "5890b6cb88371fda",
        "type": "tab",
        "label": "handle EB500",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "3b36acf1.93ddd4",
        "type": "subflow",
        "name": "handle TS590",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 140,
                "wires": [
                    {
                        "id": "11a4a0d0.2b8ecf"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1340,
                "y": 60,
                "wires": [
                    {
                        "id": "2ae46caa.fb19b4",
                        "port": 0
                    },
                    {
                        "id": "368f38c5.fde2d8",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1340,
                "y": 120,
                "wires": [
                    {
                        "id": "368f38c5.fde2d8",
                        "port": 1
                    },
                    {
                        "id": "fc917a39.138f1",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1040,
                "y": 340,
                "wires": [
                    {
                        "id": "8d2ca4a6.0365",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1040,
                "y": 240,
                "wires": [
                    {
                        "id": "ecc8a5d3.7e2da8",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1040,
                "y": 300,
                "wires": [
                    {
                        "id": "8d6e8da2.f3407",
                        "port": 0
                    }
                ]
            },
            {
                "x": 580,
                "y": 220,
                "wires": [
                    {
                        "id": "11a4a0d0.2b8ecf",
                        "port": 6
                    }
                ]
            },
            {
                "x": 540,
                "y": 380,
                "wires": [
                    {
                        "id": "11a4a0d0.2b8ecf",
                        "port": "8"
                    }
                ]
            },
            {
                "x": 640,
                "y": 400,
                "wires": [
                    {
                        "id": "11a4a0d0.2b8ecf",
                        "port": 7
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "8b02b8a4043283bf",
        "type": "group",
        "z": "2567a318.c428a4",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e8c2a6bc.ddcc4",
            "3a8bdc2c.156d54",
            "763d8174.9f848",
            "99068366.911428",
            "de32c452.d911d",
            "244a4186.25bb56",
            "e4f098759b71b749",
            "49ad81099a795091",
            "4f60e35817c63e86",
            "5e6446c4925bfd04",
            "360238c112cf7d3a",
            "514b2489175a1042",
            "40f5ccc8587640a9",
            "399c7d8cc5dbe6f6",
            "32fd6b01f1b4343d",
            "ba74f7530e91e907",
            "4a7d395589773f95",
            "1523842310924d1d"
        ],
        "x": 34,
        "y": 1259,
        "w": 1232,
        "h": 302
    },
    {
        "id": "e914de2a89715c03",
        "type": "junction",
        "z": "2567a318.c428a4",
        "x": 440,
        "y": 140,
        "wires": [
            [
                "db91e5b6.ac58a8"
            ]
        ]
    },
    {
        "id": "ba74f7530e91e907",
        "type": "junction",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "x": 400,
        "y": 1440,
        "wires": [
            [
                "e4f098759b71b749",
                "49ad81099a795091",
                "4f60e35817c63e86"
            ]
        ]
    },
    {
        "id": "4a7d395589773f95",
        "type": "junction",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "x": 640,
        "y": 1440,
        "wires": [
            [
                "244a4186.25bb56",
                "5e6446c4925bfd04"
            ]
        ]
    },
    {
        "id": "a66dbc06195f1b07",
        "type": "junction",
        "z": "2567a318.c428a4",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "80206118.6f18c8",
                "15fc324b.d35cf6",
                "26cfe699222384a2"
            ]
        ]
    },
    {
        "id": "91e37d1308a2e506",
        "type": "junction",
        "z": "2567a318.c428a4",
        "x": 1420,
        "y": 360,
        "wires": [
            [
                "54bc4149.107d4",
                "bba28a01.d07"
            ]
        ]
    },
    {
        "id": "afb3bd33d5d953f2",
        "type": "junction",
        "z": "2567a318.c428a4",
        "x": 1420,
        "y": 420,
        "wires": [
            [
                "6664f06a.70a65",
                "b91c5712.c10e98"
            ]
        ]
    },
    {
        "id": "8fb64d52ec14125e",
        "type": "junction",
        "z": "2567a318.c428a4",
        "x": 1420,
        "y": 480,
        "wires": [
            [
                "12906b84.fb58bc",
                "7b9f6f7d.db3038"
            ]
        ]
    },
    {
        "id": "caa38d283e97e854",
        "type": "junction",
        "z": "3b36acf1.93ddd4",
        "x": 480,
        "y": 740,
        "wires": [
            [
                "45c7d3158dc1da8a"
            ]
        ]
    },
    {
        "id": "c7c1fa79768ee5b3",
        "type": "websocket-client",
        "path": "ws://127.0.01:50001",
        "tls": "",
        "wholemsg": "false",
        "hb": "0"
    },
    {
        "id": "07054158deaeee18",
        "type": "influxdb",
        "hostname": "192.168.1.20",
        "port": "8086",
        "protocol": "http",
        "database": "home",
        "name": "iotstack",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "25d9cac5d030f9f8",
        "type": "serial-port",
        "serialport": "/dev/tty.usbserial-222310",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "high",
        "cts": "high",
        "dsr": "none",
        "newline": ";",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "50"
    },
    {
        "id": "11a4a0d0.2b8ecf",
        "type": "switch",
        "z": "3b36acf1.93ddd4",
        "name": "decode msg",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^FA",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^OM0",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^SF0",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^PS",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^SH",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^VS",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^(TX|RX)",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^QI",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 410,
        "y": 140,
        "wires": [
            [
                "2ae46caa.fb19b4"
            ],
            [
                "fc917a39.138f1"
            ],
            [
                "368f38c5.fde2d8"
            ],
            [
                "ecc8a5d3.7e2da8"
            ],
            [
                "8d6e8da2.f3407"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "2ae46caa.fb19b4",
        "type": "function",
        "z": "3b36acf1.93ddd4",
        "name": "TS590 \"FA\"",
        "func": "f = parseInt(msg.payload.slice(2,13));\nmsg.payload = f;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "368f38c5.fde2d8",
        "type": "function",
        "z": "3b36acf1.93ddd4",
        "name": "TS590 \"SF0\"",
        "func": "var f = parseInt(msg.payload.slice(3,14));\nvar m = msg.payload.slice(14,15);\n\n\nvar msg1 = { payload: f};\nvar msg2 = { payload: m};\n\nreturn [msg1, msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 140,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8d2ca4a6.0365",
        "type": "function",
        "z": "3b36acf1.93ddd4",
        "name": "VS: send XI",
        "func": "msg.payload = \"XI;\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "ecc8a5d3.7e2da8",
        "type": "function",
        "z": "3b36acf1.93ddd4",
        "name": "TS590 \"PS\"",
        "func": "f = parseInt(msg.payload.slice(2,3));\nmsg.payload = f;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8d6e8da2.f3407",
        "type": "function",
        "z": "3b36acf1.93ddd4",
        "name": "TS590 \"SH\"",
        "func": "var f = parseInt(msg.payload.slice(2,6));\nmsg.payload = f;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "fc917a39.138f1",
        "type": "function",
        "z": "3b36acf1.93ddd4",
        "name": "TS590 \"OM0\"",
        "func": "var f = msg.payload.slice(3,4);\nmsg.payload = f;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1f2657ee3f74b295",
        "type": "function",
        "z": "3b36acf1.93ddd4",
        "d": true,
        "name": "off",
        "func": "msg.payload = \"Q\\n\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 660,
        "wires": [
            [
                "5c40c9adb4eb9c2d",
                "61bd2eaec7b5c19a",
                "2071e4724ee97969"
            ]
        ]
    },
    {
        "id": "2071e4724ee97969",
        "type": "debug",
        "z": "3b36acf1.93ddd4",
        "d": true,
        "name": "off",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 660,
        "wires": []
    },
    {
        "id": "5c40c9adb4eb9c2d",
        "type": "link call",
        "z": "3b36acf1.93ddd4",
        "d": true,
        "name": "",
        "links": [],
        "linkType": "static",
        "timeout": "30",
        "x": 960,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "45c7d3158dc1da8a",
        "type": "switch",
        "z": "3b36acf1.93ddd4",
        "d": true,
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 740,
        "wires": [
            [
                "1f2657ee3f74b295"
            ],
            [
                "5c4cb8be82188501"
            ]
        ]
    },
    {
        "id": "5c4cb8be82188501",
        "type": "function",
        "z": "3b36acf1.93ddd4",
        "d": true,
        "name": "on",
        "func": "msg.command = \"\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 840,
        "wires": [
            [
                "bc87584e73cbe0e2",
                "3a0321e391a37951"
            ]
        ]
    },
    {
        "id": "3278e86a10bc40b6",
        "type": "debug",
        "z": "3b36acf1.93ddd4",
        "d": true,
        "name": "on",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 860,
        "wires": []
    },
    {
        "id": "bc87584e73cbe0e2",
        "type": "exec",
        "z": "3b36acf1.93ddd4",
        "d": true,
        "command": "/usr/bin/open",
        "addpay": "",
        "append": "/Users/kai/gqrx/Gqrx.app",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 980,
        "y": 820,
        "wires": [
            [
                "3278e86a10bc40b6"
            ],
            [
                "3278e86a10bc40b6"
            ],
            [
                "3278e86a10bc40b6"
            ]
        ]
    },
    {
        "id": "3a0321e391a37951",
        "type": "exec",
        "z": "3b36acf1.93ddd4",
        "d": true,
        "command": "/usr/bin/open",
        "addpay": "",
        "append": "-b com.rogueamoeba.audiohijack /Users/kai/declick.ahcommand",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 980,
        "y": 880,
        "wires": [
            [
                "3278e86a10bc40b6"
            ],
            [
                "3278e86a10bc40b6"
            ],
            [
                "3278e86a10bc40b6"
            ]
        ]
    },
    {
        "id": "61bd2eaec7b5c19a",
        "type": "exec",
        "z": "3b36acf1.93ddd4",
        "d": true,
        "command": "/usr/bin/pkill",
        "addpay": "",
        "append": "\"Audio Hijack\"",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 970,
        "y": 720,
        "wires": [
            [
                "2071e4724ee97969"
            ],
            [
                "2071e4724ee97969"
            ],
            [
                "2071e4724ee97969"
            ]
        ]
    },
    {
        "id": "76c2fd1a69fdb56f",
        "type": "inject",
        "z": "3b36acf1.93ddd4",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 640,
        "y": 660,
        "wires": [
            [
                "1f2657ee3f74b295"
            ]
        ]
    },
    {
        "id": "9f2ebe55c9f0feac",
        "type": "inject",
        "z": "3b36acf1.93ddd4",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 640,
        "y": 840,
        "wires": [
            [
                "5c4cb8be82188501"
            ]
        ]
    },
    {
        "id": "15fc324b.d35cf6",
        "type": "debug",
        "z": "2567a318.c428a4",
        "name": "TS590 serial in",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 480,
        "wires": []
    },
    {
        "id": "54bc4149.107d4",
        "type": "link out",
        "z": "2567a318.c428a4",
        "name": "TS590 Freq",
        "mode": "link",
        "links": [
            "08ee684114decc06",
            "0abf31a30a90f942",
            "763d8174.9f848"
        ],
        "x": 1535,
        "y": 360,
        "wires": []
    },
    {
        "id": "e8c2a6bc.ddcc4",
        "type": "comment",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "send changes to gqrx, receive gqrx changes",
        "info": "",
        "x": 250,
        "y": 1300,
        "wires": []
    },
    {
        "id": "3a8bdc2c.156d54",
        "type": "function",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "set GQRX frequency",
        "func": "var f = parseInt(msg.payload);\n\nmsg.payload = \"F \" + f +\"\\n\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 1380,
        "wires": [
            [
                "ba74f7530e91e907",
                "99068366.911428"
            ]
        ]
    },
    {
        "id": "763d8174.9f848",
        "type": "link in",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "frequency",
        "links": [
            "56f23373.eea424",
            "a04f7c82.2c3d1",
            "54bc4149.107d4"
        ],
        "x": 75,
        "y": 1380,
        "wires": [
            [
                "3a8bdc2c.156d54"
            ]
        ]
    },
    {
        "id": "bcd3b431.1b416",
        "type": "function",
        "z": "2567a318.c428a4",
        "name": "build ts590 FA cmd",
        "func": "if (msg.payload == flow.get(\"ts590_freq\")){\n    return ;\n}\n\nflow.set(\"ts590_freq\", f);\nvar f = \"00000000000\" + (msg.payload) +\"0\";\nf = f.substr(-12);\nf = f.slice(0, -1);\n\nvar m, mode;\nif (parseInt(f) > 10000000) m=\"2\"\nelse m=\"1\";\n\nif (!(m === flow.get(\"ts590_mode\"))) mode=\"OM0\"+m+\";\"\nelse mode=\"\";\n\nmsg.payload = mode+ \"FA\" + f + \";\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 900,
        "wires": [
            [
                "ae71736d.90f3a8",
                "1f9f01bd75c5fded"
            ]
        ]
    },
    {
        "id": "b1a26db2.974628",
        "type": "debug",
        "z": "2567a318.c428a4",
        "name": "ts590 cmd",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b8913ddd.bcf758",
        "type": "link in",
        "z": "2567a318.c428a4",
        "name": "",
        "links": [
            "9a67ec499719f61e",
            "80bbd2c6ac8a0123",
            "514b2489175a1042"
        ],
        "x": 135,
        "y": 900,
        "wires": [
            [
                "bcd3b431.1b416"
            ]
        ]
    },
    {
        "id": "18be1e2c.8b3daa",
        "type": "inject",
        "z": "2567a318.c428a4",
        "name": "reset TS590 comms",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "AI4;SH0;FA;OM0;",
        "payloadType": "str",
        "x": 400,
        "y": 840,
        "wires": [
            [
                "ae71736d.90f3a8"
            ]
        ]
    },
    {
        "id": "bba28a01.d07",
        "type": "debug",
        "z": "2567a318.c428a4",
        "name": "TS590 freq change",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 400,
        "wires": []
    },
    {
        "id": "ae71736d.90f3a8",
        "type": "function",
        "z": "2567a318.c428a4",
        "name": "pass",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 960,
        "wires": [
            [
                "b1a26db2.974628",
                "585b8d084e8b88bc"
            ]
        ]
    },
    {
        "id": "5c8e7562.58805c",
        "type": "comment",
        "z": "2567a318.c428a4",
        "name": "handle TS590",
        "info": "TS590 is set to AI4; so it reports all changes without polling\n\n",
        "x": 70,
        "y": 380,
        "wires": []
    },
    {
        "id": "45511962.276a48",
        "type": "debug",
        "z": "2567a318.c428a4",
        "name": "RUMLog TCP out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 710,
        "y": 620,
        "wires": []
    },
    {
        "id": "b5803ae8.706908",
        "type": "tcp out",
        "z": "2567a318.c428a4",
        "name": "RUMLOG TCP out",
        "host": "localhost",
        "port": "8888",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "x": 710,
        "y": 560,
        "wires": []
    },
    {
        "id": "127b39e7.f993de",
        "type": "tcp in",
        "z": "2567a318.c428a4",
        "name": "RUMLog TCP in",
        "server": "server",
        "host": "",
        "port": "8888",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 180,
        "y": 1080,
        "wires": [
            [
                "56f725ed.c911c4",
                "fdb05e45.e27b38"
            ]
        ]
    },
    {
        "id": "56f725ed.c911c4",
        "type": "debug",
        "z": "2567a318.c428a4",
        "name": "RUMLog TCP in",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 1120,
        "wires": []
    },
    {
        "id": "613bc6c3.f9db6",
        "type": "comment",
        "z": "2567a318.c428a4",
        "name": "echo RUMLog <-> TS590",
        "info": "",
        "x": 210,
        "y": 1040,
        "wires": []
    },
    {
        "id": "a8129d03.778888",
        "type": "function",
        "z": "2567a318.c428a4",
        "name": "add \";\"",
        "func": "msg.payload=msg.payload + \";\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 560,
        "wires": [
            [
                "b5803ae8.706908",
                "45511962.276a48"
            ]
        ]
    },
    {
        "id": "fdb05e45.e27b38",
        "type": "function",
        "z": "2567a318.c428a4",
        "name": "delete AI0; messages",
        "func": "if (msg.payload==\"AI0;\") {\n    return;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "ae71736d.90f3a8"
            ]
        ]
    },
    {
        "id": "5e58f867.1e03d",
        "type": "inject",
        "z": "2567a318.c428a4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "QD;QI;QR10;",
        "payloadType": "str",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "e914de2a89715c03"
            ]
        ]
    },
    {
        "id": "db91e5b6.ac58a8",
        "type": "function",
        "z": "2567a318.c428a4",
        "name": "",
        "func": "//msg.payload = \"AI0;\" +  msg.payload + \"AI4;\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 140,
        "wires": [
            [
                "62c944fd.f62f44",
                "2bfd895.2bb2b76"
            ]
        ]
    },
    {
        "id": "62c944fd.f62f44",
        "type": "debug",
        "z": "2567a318.c428a4",
        "name": "TS590 direct command",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 220,
        "wires": []
    },
    {
        "id": "d0364bde.8c3e28",
        "type": "inject",
        "z": "2567a318.c428a4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "PS1;",
        "payloadType": "str",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "e914de2a89715c03"
            ]
        ]
    },
    {
        "id": "b91c5712.c10e98",
        "type": "debug",
        "z": "2567a318.c428a4",
        "name": "TS590 mode change",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 480,
        "wires": []
    },
    {
        "id": "99068366.911428",
        "type": "function",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "set GQRX mode",
        "func": "var mode=\"\", bw=0;\nvar m = flow.get(\"ts590_mode\");\nswitch (m) {\n    case \"C\":\n    case \"1\": mode = \"LSB\"; \n            break;\n    case \"D\":\n        case \"2\": mode = \"USB\";\n            break;\n    case \"7\":\n    case \"3\": mode = \"CW\";\n            break;\n    case \"4\": mode = \"FM\";\n            break;\n    case \"5\": mode = \"AM\";\n            break;\n    default: mode = \"OFF\"\n}\n\n/* ts-590 \nvar b = flow.get(\"ts590_bw\")\nswitch (b) {\n    case 0: bw = 1200; \n            break;\n    case 1: bw = 1200; \n            break;\n    case 2: bw = 1400; \n            break;\n    case 3: bw = 1600; \n            break;\n    case 4: bw = 1800; \n            break;\n    case 5: bw = 2000; \n            break;\n    case 6: bw = 2200; \n            break;\n    case 7: bw = 2400; \n            break;\n    case 8: bw = 2600; \n            break;\n    case 9: bw = 2800; \n            break;\n    case 10: bw = 3000; \n            break;\n    case 11: bw = 3400; \n            break;\n    case 12: bw = 4000; \n            break;\n    case 13: bw = 5000; \n            break;\n    default: bw = 2800\n}\n*/\n\n/* ts-890 */\nvar b = flow.get(\"ts590_bw\")\nswitch (b) {\n        case 0: bw = 600;\n                break;\n        case 1: bw = 700;\n                break;\n        case 2: bw = 800;\n                break;\n        case 3: bw = 900;\n                break;\n        case 4: bw = 1000;\n                break;\n        case 5: bw = 1100;\n                break;\n        case 6: bw = 1200;\n                break;\n        case 7: bw = 1300;\n                break;\n        case 8: bw = 1400;\n                break;\n        case 9: bw = 1500;\n                break;\n        case 10: bw = 1600;\n                break;\n        case 11: bw = 1700;\n                break;\n        case 12: bw = 1800;\n                break;\n        case 13: bw = 19000;\n                break;\n        case 14: bw = 2000;\n                break;\n        case 15: bw = 2100;\n                break;\n        case 16: bw = 2200;\n                break;\n        case 17: bw = 2300;\n                break;\n        case 18: bw = 2400;\n                break;\n        case 19: bw = 2500;\n                break;\n        case 20: bw = 2600;\n                break;\n        case 21: bw = 2700;\n                break;\n        case 22: bw = 2800;\n                break;\n        case 23: bw = 2900;\n                break;\n        case 24: bw = 3000;\n                break;\n        case 25: bw = 3400;\n                break;\n        case 26: bw = 4000;\n                break;\n        case 27: bw = 5000;\n                break;\n        default: bw = 2800\n}\n\n\nmsg.payload = \"M \" + mode + \" \" + bw + \"\\n\";\n\nvar mode = \"\", bw = 0;\nvar m = flow.get(\"ts590_mode\");\nswitch (m) {\n        case \"C\":\n        case \"1\": mode = \"LSB\";\n                break;\n        case \"D\":\n        case \"2\": mode = \"USB\";\n                break;\n        case \"7\":\n        case \"3\": mode = \"CW\";\n                break;\n        case \"4\": mode = \"FM\";\n                break;\n        case \"5\": mode = \"AM\";\n                break;\n        default: mode = \"OFF\"\n}\n\n/* ts-590 \nvar b = flow.get(\"ts590_bw\")\nswitch (b) {\n    case 0: bw = 1200; \n            break;\n    case 1: bw = 1200; \n            break;\n    case 2: bw = 1400; \n            break;\n    case 3: bw = 1600; \n            break;\n    case 4: bw = 1800; \n            break;\n    case 5: bw = 2000; \n            break;\n    case 6: bw = 2200; \n            break;\n    case 7: bw = 2400; \n            break;\n    case 8: bw = 2600; \n            break;\n    case 9: bw = 2800; \n            break;\n    case 10: bw = 3000; \n            break;\n    case 11: bw = 3400; \n            break;\n    case 12: bw = 4000; \n            break;\n    case 13: bw = 5000; \n            break;\n    default: bw = 2800\n}\n*/\n\n/* ts-890 */\nvar b = flow.get(\"ts590_bw\")\nswitch (b) {\n        case 0: bw = 600;\n                break;\n        case 1: bw = 700;\n                break;\n        case 2: bw = 800;\n                break;\n        case 3: bw = 900;\n                break;\n        case 4: bw = 1000;\n                break;\n        case 5: bw = 1100;\n                break;\n        case 6: bw = 1200;\n                break;\n        case 7: bw = 1300;\n                break;\n        case 8: bw = 1400;\n                break;\n        case 9: bw = 1500;\n                break;\n        case 10: bw = 1600;\n                break;\n        case 11: bw = 1700;\n                break;\n        case 12: bw = 1800;\n                break;\n        case 13: bw = 19000;\n                break;\n        case 14: bw = 2000;\n                break;\n        case 15: bw = 2100;\n                break;\n        case 16: bw = 2200;\n                break;\n        case 17: bw = 2300;\n                break;\n        case 18: bw = 2400;\n                break;\n        case 19: bw = 2500;\n                break;\n        case 20: bw = 2600;\n                break;\n        case 21: bw = 2700;\n                break;\n        case 22: bw = 2800;\n                break;\n        case 23: bw = 2900;\n                break;\n        case 24: bw = 3000;\n                break;\n        case 25: bw = 3400;\n                break;\n        case 26: bw = 4000;\n                break;\n        case 27: bw = 5000;\n                break;\n        default: bw = 2800\n}\n\n\nmsg.payload = \"M \" + mode + \" \" + bw + \"\\n\";\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 1440,
        "wires": [
            [
                "ba74f7530e91e907"
            ]
        ]
    },
    {
        "id": "de32c452.d911d",
        "type": "link in",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "frequency",
        "links": [
            "56f23373.eea424",
            "6664f06a.70a65",
            "b46ecf4.2eeef3",
            "12906b84.fb58bc"
        ],
        "x": 75,
        "y": 1440,
        "wires": [
            [
                "99068366.911428"
            ]
        ]
    },
    {
        "id": "6664f06a.70a65",
        "type": "link out",
        "z": "2567a318.c428a4",
        "name": "TS590 mode",
        "mode": "link",
        "links": [
            "de32c452.d911d",
            "ec544d7221a5e5a4"
        ],
        "x": 1535,
        "y": 440,
        "wires": []
    },
    {
        "id": "56e74b3f.2d327c",
        "type": "subflow:3b36acf1.93ddd4",
        "z": "2567a318.c428a4",
        "name": "handle TS590",
        "env": [],
        "x": 800,
        "y": 420,
        "wires": [
            [
                "c7088c6328e556f6"
            ],
            [
                "120caf50.d7d269"
            ],
            [],
            [],
            [
                "98b36d19.e79db"
            ],
            [
                "0e9ae41ac891c169"
            ],
            [
                "8081aebd.d0d328"
            ],
            [
                "c581a60a82e6becf"
            ]
        ]
    },
    {
        "id": "80206118.6f18c8",
        "type": "split",
        "z": "2567a318.c428a4",
        "name": "split by \";\"",
        "splt": ";",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 310,
        "y": 420,
        "wires": [
            [
                "c09101ae.a2db98"
            ]
        ]
    },
    {
        "id": "c09101ae.a2db98",
        "type": "switch",
        "z": "2567a318.c428a4",
        "name": "delete empty and \"?\" messages",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\?",
                "vt": "str",
                "case": false
            },
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 530,
        "y": 420,
        "wires": [
            [],
            [],
            [
                "56e74b3f.2d327c",
                "a8129d03.778888"
            ]
        ]
    },
    {
        "id": "8081aebd.d0d328",
        "type": "debug",
        "z": "2567a318.c428a4",
        "name": "undecoded message",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 780,
        "wires": []
    },
    {
        "id": "fd3c0c04.5770c8",
        "type": "inject",
        "z": "2567a318.c428a4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "PS0;",
        "payloadType": "str",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "e914de2a89715c03"
            ]
        ]
    },
    {
        "id": "3669651c.1a03da",
        "type": "link in",
        "z": "2567a318.c428a4",
        "name": "",
        "links": [
            "2bfd895.2bb2b76",
            "073f8778fab8d796"
        ],
        "x": 615,
        "y": 840,
        "wires": [
            [
                "ae71736d.90f3a8"
            ]
        ]
    },
    {
        "id": "2bfd895.2bb2b76",
        "type": "link out",
        "z": "2567a318.c428a4",
        "name": "",
        "links": [
            "3669651c.1a03da"
        ],
        "x": 735,
        "y": 140,
        "wires": []
    },
    {
        "id": "98b36d19.e79db",
        "type": "change",
        "z": "2567a318.c428a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ts590_bw",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 440,
        "wires": [
            [
                "c234b349dff6370f"
            ]
        ]
    },
    {
        "id": "120caf50.d7d269",
        "type": "change",
        "z": "2567a318.c428a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ts590_mode",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 400,
        "wires": [
            [
                "9685aaefc739d4bf"
            ]
        ]
    },
    {
        "id": "7b9f6f7d.db3038",
        "type": "debug",
        "z": "2567a318.c428a4",
        "name": "TS590 bandwidth change",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 560,
        "wires": []
    },
    {
        "id": "12906b84.fb58bc",
        "type": "link out",
        "z": "2567a318.c428a4",
        "name": "",
        "links": [
            "de32c452.d911d",
            "00af385a17bd452e"
        ],
        "x": 1535,
        "y": 520,
        "wires": []
    },
    {
        "id": "df5fec2af253047d",
        "type": "inject",
        "z": "2567a318.c428a4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "EX07200003;",
        "payloadType": "str",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "e914de2a89715c03"
            ]
        ]
    },
    {
        "id": "26cfe699222384a2",
        "type": "msg-speed",
        "z": "2567a318.c428a4",
        "name": "TS590 msgs",
        "frequency": "sec",
        "interval": "1",
        "estimation": false,
        "ignore": true,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 290,
        "y": 540,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "0ba63c6de97d34bd",
        "type": "influxdb out",
        "z": "2567a318.c428a4",
        "influxdb": "07054158deaeee18",
        "name": "trx to network",
        "measurement": "network",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1200,
        "y": 680,
        "wires": []
    },
    {
        "id": "0e9ae41ac891c169",
        "type": "function",
        "z": "2567a318.c428a4",
        "name": "tx freq",
        "func": "var txfreq=flow.get(\"ts590_freq\");\n\nmsg.payload = txfreq/1000000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 680,
        "wires": [
            [
                "0ba63c6de97d34bd",
                "8bdb8d34b0e69f7d"
            ]
        ]
    },
    {
        "id": "8bdb8d34b0e69f7d",
        "type": "debug",
        "z": "2567a318.c428a4",
        "name": "trx",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 720,
        "wires": []
    },
    {
        "id": "792f17f74bf4e0ba",
        "type": "inject",
        "z": "2567a318.c428a4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "TX2;",
        "payloadType": "str",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "e914de2a89715c03"
            ]
        ]
    },
    {
        "id": "e5e5e5afef6c1fc1",
        "type": "inject",
        "z": "2567a318.c428a4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "MU0;",
        "payloadType": "str",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "e914de2a89715c03"
            ]
        ]
    },
    {
        "id": "244a4186.25bb56",
        "type": "debug",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "gqrx response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1380,
        "wires": []
    },
    {
        "id": "e4f098759b71b749",
        "type": "debug",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "gqrx request",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 1380,
        "wires": []
    },
    {
        "id": "49ad81099a795091",
        "type": "tcp request",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "gqrx tcp",
        "server": "127.0.0.1",
        "port": "7356",
        "out": "sit",
        "ret": "string",
        "splitc": " ",
        "newline": "\\n",
        "trim": false,
        "tls": "",
        "x": 560,
        "y": 1440,
        "wires": [
            [
                "4a7d395589773f95"
            ]
        ]
    },
    {
        "id": "4f60e35817c63e86",
        "type": "msg-speed",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "gqrx msgs",
        "frequency": "sec",
        "interval": "1",
        "estimation": false,
        "ignore": true,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 570,
        "y": 1500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "797c2464b050bc15",
        "type": "serial in",
        "z": "2567a318.c428a4",
        "name": "TS-890",
        "serial": "25d9cac5d030f9f8",
        "x": 70,
        "y": 440,
        "wires": [
            [
                "a66dbc06195f1b07"
            ]
        ]
    },
    {
        "id": "585b8d084e8b88bc",
        "type": "serial out",
        "z": "2567a318.c428a4",
        "name": "TS-890",
        "serial": "25d9cac5d030f9f8",
        "x": 1000,
        "y": 940,
        "wires": []
    },
    {
        "id": "9685aaefc739d4bf",
        "type": "rbe",
        "z": "2567a318.c428a4",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1290,
        "y": 400,
        "wires": [
            [
                "afb3bd33d5d953f2"
            ]
        ]
    },
    {
        "id": "c234b349dff6370f",
        "type": "rbe",
        "z": "2567a318.c428a4",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1290,
        "y": 440,
        "wires": [
            [
                "8fb64d52ec14125e"
            ]
        ]
    },
    {
        "id": "5e6446c4925bfd04",
        "type": "switch",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^RPRT",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^F",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 750,
        "y": 1440,
        "wires": [
            [
                "399c7d8cc5dbe6f6"
            ],
            [
                "360238c112cf7d3a"
            ],
            [
                "32fd6b01f1b4343d"
            ]
        ]
    },
    {
        "id": "360238c112cf7d3a",
        "type": "function",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "gqrx freq",
        "func": "var f = parseInt(msg.payload.substring(2));\n\nif (isNaN(f) || f <= 0) {\n    flow.set(\"gqrx_freq\", -1);\n    return;\n}\nmsg.payload = f;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1460,
        "wires": [
            [
                "40f5ccc8587640a9",
                "514b2489175a1042"
            ]
        ]
    },
    {
        "id": "514b2489175a1042",
        "type": "link out",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "",
        "links": [
            "6c640c27.c92afc",
            "b8913ddd.bcf758"
        ],
        "x": 1115,
        "y": 1420,
        "wires": []
    },
    {
        "id": "40f5ccc8587640a9",
        "type": "debug",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "gqrx freq",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 1460,
        "wires": []
    },
    {
        "id": "399c7d8cc5dbe6f6",
        "type": "debug",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "RPRT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 1400,
        "wires": []
    },
    {
        "id": "9bf8df92f88c92ea",
        "type": "rbe",
        "z": "2567a318.c428a4",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1290,
        "y": 360,
        "wires": [
            [
                "91e37d1308a2e506"
            ]
        ]
    },
    {
        "id": "32fd6b01f1b4343d",
        "type": "debug",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "unknown rqrx report",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1520,
        "wires": []
    },
    {
        "id": "1f9f01bd75c5fded",
        "type": "debug",
        "z": "2567a318.c428a4",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 980,
        "wires": []
    },
    {
        "id": "c7088c6328e556f6",
        "type": "change",
        "z": "2567a318.c428a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ts590_freq",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 360,
        "wires": [
            [
                "9bf8df92f88c92ea"
            ]
        ]
    },
    {
        "id": "c581a60a82e6becf",
        "type": "function",
        "z": "2567a318.c428a4",
        "name": "quick mem",
        "func": "msg.payload = \"bookmark Q temp\\n\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 500,
        "wires": [
            [
                "85eb70ce8b25090c"
            ]
        ]
    },
    {
        "id": "85eb70ce8b25090c",
        "type": "link out",
        "z": "2567a318.c428a4",
        "name": "gqrx",
        "mode": "link",
        "links": [
            "1523842310924d1d"
        ],
        "x": 1285,
        "y": 500,
        "wires": []
    },
    {
        "id": "1523842310924d1d",
        "type": "link in",
        "z": "2567a318.c428a4",
        "g": "8b02b8a4043283bf",
        "name": "gqrx",
        "links": [
            "85eb70ce8b25090c"
        ],
        "x": 255,
        "y": 1520,
        "wires": [
            [
                "ba74f7530e91e907"
            ]
        ]
    },
    {
        "id": "ce9b801a20ac0ac0",
        "type": "websocket in",
        "z": "8a2421553543bf8c",
        "name": "tci",
        "server": "",
        "client": "c7c1fa79768ee5b3",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "68484873a55f4ebe",
                "edc6dc2d0258db3a"
            ]
        ]
    },
    {
        "id": "d2036e0d1f8d5c96",
        "type": "websocket out",
        "z": "8a2421553543bf8c",
        "name": "tci",
        "server": "",
        "client": "c7c1fa79768ee5b3",
        "x": 630,
        "y": 420,
        "wires": []
    },
    {
        "id": "1f3ff5966fb37a3b",
        "type": "function",
        "z": "8a2421553543bf8c",
        "name": "set tci frequency",
        "func": "var f = parseInt(msg.payload);\n\n/*if (f == flow.get(\"gqrx_freq\")){\n    return ;\n}\n*/\n//msg.payload = \"dds:0,\" + f + \";if:0,0,0;\";\nmsg.payload = \"vfo:0,0,\" + f + \";\";\n//flow.set(\"gqrx_freq\", f);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 420,
        "wires": [
            [
                "d2036e0d1f8d5c96",
                "afdf23396ea22f13"
            ]
        ]
    },
    {
        "id": "2d1cd3de4541f4ee",
        "type": "debug",
        "z": "8a2421553543bf8c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 240,
        "wires": []
    },
    {
        "id": "08ee684114decc06",
        "type": "link in",
        "z": "8a2421553543bf8c",
        "name": "",
        "links": [
            "54bc4149.107d4"
        ],
        "x": 195,
        "y": 420,
        "wires": [
            [
                "1f3ff5966fb37a3b"
            ]
        ]
    },
    {
        "id": "afdf23396ea22f13",
        "type": "debug",
        "z": "8a2421553543bf8c",
        "name": "TCI out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 500,
        "wires": []
    },
    {
        "id": "68484873a55f4ebe",
        "type": "switch",
        "z": "8a2421553543bf8c",
        "name": "decode msg",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^vfo:",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 240,
        "wires": [
            [
                "514aade24dc52e6c"
            ],
            []
        ]
    },
    {
        "id": "514aade24dc52e6c",
        "type": "function",
        "z": "8a2421553543bf8c",
        "name": "vfo",
        "func": "const param = msg.payload.split(',')\n\nif(param[1] == '0') {\n    msg.payload = parseInt(param[2]);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 220,
        "wires": [
            [
                "2d1cd3de4541f4ee",
                "5aec3cbbb4c2aba7"
            ]
        ]
    },
    {
        "id": "edc6dc2d0258db3a",
        "type": "debug",
        "z": "8a2421553543bf8c",
        "name": "TCI in",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 140,
        "wires": []
    },
    {
        "id": "5aec3cbbb4c2aba7",
        "type": "link out",
        "z": "8a2421553543bf8c",
        "name": "set ts590 freq",
        "mode": "link",
        "links": [
            "ae2538282d499511"
        ],
        "x": 765,
        "y": 320,
        "wires": []
    },
    {
        "id": "658215a2f21d675d",
        "type": "tcp out",
        "z": "5890b6cb88371fda",
        "name": "EB500 TCP",
        "host": "192.168.1.58",
        "port": "5555",
        "beserver": "client",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 990,
        "y": 140,
        "wires": []
    },
    {
        "id": "2dc90e0fa4b85ce8",
        "type": "function",
        "z": "5890b6cb88371fda",
        "name": "EB500 demod/TRX control",
        "func": "var f = parseInt(msg.payload);\n\n// control a memory\nmsg.payload = \"MEM:CONT MEM0, \" + f/1000000 + \" MHz, 0, CW , 0.1 kHz, (@1),1,OFF,ON,OFF,ON\\r\\n\";\nmsg.payload = msg.payload + \"MEM:CONT:LAB MEM0, \\\"TRX\\\"\\r\\n\";\n\n// control the demodulator\nmsg.payload = msg.payload + \"FREQ:DEM \" + f + \"\\r\\n\";\nreturn msg;\n\n\n\n\n//MEMory:CONTents MEM1, 98.5 MHz, 34, FM ,120 kHz, (@1),1,OFF,ON,OFF,ON",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 160,
        "wires": [
            [
                "0dddf2407965d24e"
            ]
        ]
    },
    {
        "id": "e799a0cdf686aae4",
        "type": "debug",
        "z": "5890b6cb88371fda",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 990,
        "y": 200,
        "wires": []
    },
    {
        "id": "0abf31a30a90f942",
        "type": "link in",
        "z": "5890b6cb88371fda",
        "name": "",
        "links": [
            "54bc4149.107d4"
        ],
        "x": 135,
        "y": 160,
        "wires": [
            [
                "2dc90e0fa4b85ce8",
                "b1983807a36ac905"
            ]
        ]
    },
    {
        "id": "23c31fb482ca5a12",
        "type": "comment",
        "z": "5890b6cb88371fda",
        "name": "handle EB500",
        "info": "",
        "x": 70,
        "y": 20,
        "wires": []
    },
    {
        "id": "b1983807a36ac905",
        "type": "rbe",
        "z": "5890b6cb88371fda",
        "name": "more than ...",
        "func": "deadbandEq",
        "gap": "100000",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "25e3957bdb5142d5"
            ]
        ]
    },
    {
        "id": "0dddf2407965d24e",
        "type": "function",
        "z": "5890b6cb88371fda",
        "name": "pass",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 160,
        "wires": [
            [
                "e799a0cdf686aae4",
                "658215a2f21d675d"
            ]
        ]
    },
    {
        "id": "25e3957bdb5142d5",
        "type": "function",
        "z": "5890b6cb88371fda",
        "name": "EB500 frequency control",
        "func": "var f = parseInt(msg.payload);\n\nmsg.payload = \"FREQ \" + f + \"\\r\\n\";\nreturn msg;\n\n\n\n\n//MEMory:CONTents MEM1, 98.5 MHz, 34, FM ,120 kHz, (@1),1,OFF,ON,OFF,ON",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 220,
        "wires": [
            [
                "0dddf2407965d24e"
            ]
        ]
    },
    {
        "id": "ec544d7221a5e5a4",
        "type": "link in",
        "z": "5890b6cb88371fda",
        "name": "",
        "links": [
            "6664f06a.70a65"
        ],
        "x": 135,
        "y": 300,
        "wires": [
            [
                "999e5dd62db5a59f"
            ]
        ]
    },
    {
        "id": "999e5dd62db5a59f",
        "type": "function",
        "z": "5890b6cb88371fda",
        "name": "set EB500 mode",
        "func": "var mode=\"\", bw=0;\n\n//var m = flow.get(\"ts590_mode\");\nvar m = msg.payload;\nswitch (m) {\n    case 1: mode = \"LSB\"; \n            break;\n    case 2: mode = \"USB\";\n            break;\n    case 3: mode = \"CW\";\n            break;\n    case 4: mode = \"FM\";\n            break;\n    case 5: mode = \"AM\";\n            break;\n    case 2: mode = \"FSK\";\n            break;\n    default: mode = \"OFF\"\n}\n\n//\nvar b = flow.get(\"ts590_bw\")\nswitch (b) {\n    case 0: bw = 1200; \n            break;\n    case 1: bw = 1200; \n            break;\n    case 2: bw = 1400; \n            break;\n    case 3: bw = 1600; \n            break;\n    case 4: bw = 1800; \n            break;\n    case 5: bw = 2000; \n            break;\n    case 6: bw = 2200; \n            break;\n    case 7: bw = 2400; \n            break;\n    case 8: bw = 2600; \n            break;\n    case 9: bw = 2800; \n            break;\n    case 10: bw = 3000; \n            break;\n    case 11: bw = 3400; \n            break;\n    case 12: bw = 4000; \n            break;\n    case 13: bw = 5000; \n            break;\n    default: bw = 2800\n}\n\n//\n\nmsg.payload = \"DEM \" + mode + \"\\r\\n \";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 300,
        "wires": [
            [
                "0dddf2407965d24e"
            ]
        ]
    }
]